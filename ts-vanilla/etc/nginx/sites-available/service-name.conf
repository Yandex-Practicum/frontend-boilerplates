server {
  set           $root_path /var/www/html;
  include       listen;
  include       envs;

  server_name   host1 host2;

  access_log    /var/log/access_logs.log;
  error_log     /var/log/error_logs.log;

  include       common-locations;

  location /dist/ {
    proxy_set_header      Host $host;
    proxy_set_header      X-Real-IP $remote_addr;
    proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass            https://localhost:4002/dist/;
    proxy_set_header      X-Forwarded-Proto $scheme;
    client_max_body_size  128m;
    add_header            Last-Modified $date_gmt;
    expires 30d;
    add_header Vary Accept-Encoding;
    add_header Static-Cache on;
    access_log off;
  }

  location / {
    proxy_set_header      Host $host;
    proxy_set_header      X-Real-IP $remote_addr;
    proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass            https://localhost:4002/;
    proxy_set_header      X-Forwarded-Proto $scheme;
    proxy_set_header      Cache-Control no-cache;

    client_max_body_size  128m;

    add_header            Last-Modified $date_gmt;
    add_header            Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age = 0';

    if_modified_since     off;
    expires               off;
    etag                  off;

    add_header X-RTC-Host $host;
    add_header X-RTC-Env  testing;
  }

  location /ping {
    add_header content-type "application/json";
    return 200 ' {"status": "ok", "message": "pong", "timestamp": "$date_gmt", "env": "testing", "host": "$host"}';
  }
}
